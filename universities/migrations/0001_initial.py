# Generated by Django 5.1.7 on 2025-03-26 04:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationDeadline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('early', 'Ранняя подача'), ('regular', 'Обычная подача'), ('rolling', 'Подача на постоянной основе'), ('priority', 'Приоритетная подача'), ('deferred', 'Отложенная подача'), ('transfer', 'Подача для перевода')], max_length=50, verbose_name='Тип дедлайна')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип дедлайна',
                'verbose_name_plural': 'Типы дедлайнов',
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=100, verbose_name='Название экзамена')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('min_possible_score', models.IntegerField(verbose_name='Минимально возможный балл')),
                ('max_possible_score', models.IntegerField(verbose_name='Максимально возможный балл')),
            ],
            options={
                'verbose_name': 'Экзамен',
                'verbose_name_plural': 'Экзамены',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('location', models.CharField(max_length=100, verbose_name='Местоположение')),
                ('founded_year', models.IntegerField(blank=True, null=True, verbose_name='Год основания')),
                ('website_url', models.URLField(verbose_name='Веб-сайт')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('favorites', models.ManyToManyField(blank=True, related_name='favorite_universities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Университет',
                'verbose_name_plural': 'Университеты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('major_name', models.CharField(max_length=100, verbose_name='Название специальности')),
                ('degree_type', models.CharField(max_length=50, verbose_name='Тип степени')),
                ('duration', models.IntegerField(verbose_name='Длительность обучения (лет)')),
                ('tuition_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Стоимость обучения')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='majors', to='universities.university')),
            ],
            options={
                'verbose_name': 'Специальность',
                'verbose_name_plural': 'Специальности',
            },
        ),
        migrations.CreateModel(
            name='SavedUniversity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_universities', to=settings.AUTH_USER_MODEL)),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by_users', to='universities.university')),
            ],
            options={
                'verbose_name': 'Сохраненный университет',
                'verbose_name_plural': 'Сохраненные университеты',
                'unique_together': {('user', 'university')},
            },
        ),
        migrations.CreateModel(
            name='UniversityDeadline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала подачи')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата конца подачи')),
                ('deadline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='university_deadlines', to='universities.applicationdeadline')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='application_deadlines', to='universities.university')),
            ],
            options={
                'verbose_name': 'Дедлайн университета',
                'verbose_name_plural': 'Дедлайны университетов',
                'unique_together': {('university', 'deadline')},
            },
        ),
        migrations.CreateModel(
            name='UniversityExamRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_score', models.IntegerField(verbose_name='Минимальный проходной балл')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='universities.exam')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_requirements', to='universities.major')),
            ],
            options={
                'verbose_name': 'Требование к экзамену',
                'verbose_name_plural': 'Требования к экзаменам',
                'unique_together': {('major', 'exam')},
            },
        ),
    ]
